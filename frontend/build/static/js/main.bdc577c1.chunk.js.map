{"version":3,"sources":["services/network.js","components/TimePicker/index.js","utilities/macros.js","components/FormError/index.js","utilities/time.js","components/Calculator/Result.js","components/Calculator/index.js","components/Calculator/validator.js","App.js","index.js"],"names":["network","axios","create","baseURL","props","id","label","onChange","time","htmlFor","type","ev","target","value","required","macros","unknow","display","message","className","style","fontSize","FormErrorProps","checkTime","test","dayHours","nightHours","ResultProps","Calculator","useState","initialTime","setInitialTime","finalTime","setFinalTime","loadingDisplay","setLoadingDisplay","errorProps","setErrorProps","showError","resultProps","setResultProps","canSubmit","onSubmit","preventDefault","validateFields","get","then","data","catch","error","response","FormError","createTimePicker","size","Result","TimePicker","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdc577c1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst network = axios.create({\n    baseURL: 'http://localhost:3333',\n});\n\nexport default network;\n","import React from 'react';\n\nexport default props => {\n    const { id, label, onChange, time } = props;\n\n    const timeChangeHandler = ev => onChange(ev.target.value);\n\n    return (\n        <>\n            <label htmlFor={id}>{label}</label>\n            <input\n                id={id}\n                type=\"time\"\n                onChange={timeChangeHandler}\n                value={time}\n                required={true}\n            />\n        </>\n    );\n};\n","const macros = {\n    'finalTime.invalid': 'Hora final inválida',\n    'initialTime.invalid': 'Hora inicial inválida',\n    'time.interval': 'As duas horas devem ser diferentes',\n    unknow:\n        'Erro desconhecio. Recarregue a página ou tente novamente mais tarde.',\n};\n\nexport default macros;\n","import React from 'react';\nimport macros from '../../utilities/macros';\n\nexport default props => {\n    const { display, message } = props;\n    return (\n        <div className={`row ${display}`} style={{ fontSize: 16 }}>\n            <div className=\"col s12 red-text\">{macros[message]}</div>\n        </div>\n    );\n};\n\nconst FormErrorProps = {\n    display: 'hide',\n    message: '',\n};\n\nexport { FormErrorProps };\n","export function formatTimeUnity(timeUnity) {\n    return `${timeUnity < 10 ? '0' : ''}${timeUnity}`;\n}\nexport function checkTime(time) {\n    return /^(2[0-4]|[01]?[0-9]):([0-9]|[0-5]\\d)$/.test(time);\n}\n","import React from 'react';\n\nexport default props => {\n    const { dayHours, nightHours } = props;\n\n    return (\n        <div className=\"row\">\n            <div\n                style={{\n                    display: dayHours || nightHours ? 'block' : 'none',\n                }}\n                className=\"col s12 result\"\n            >\n                <h5>Resultado da Jornada</h5>\n                <p>Horas diurnas: {dayHours}</p>\n                <p>Horas noturnas: {nightHours}</p>\n            </div>\n        </div>\n    );\n};\n\nconst ResultProps = {\n    dayHours: '',\n    nightHours: '',\n};\nexport { ResultProps };\n","import React, { useState } from 'react';\nimport { Preloader } from 'react-materialize';\n\nimport network from '../../services/network';\n\nimport TimePicker from '../TimePicker';\nimport FormError, { FormErrorProps } from '../FormError';\n\nimport { validateFields } from './validator';\nimport Result, { ResultProps } from './Result';\n\nimport './index.css';\n\nexport default function Calculator() {\n    const [initialTime, setInitialTime] = useState('');\n    const [finalTime, setFinalTime] = useState('');\n\n    const [loadingDisplay, setLoadingDisplay] = useState('hide');\n    const showLoading = () => setLoadingDisplay('');\n    const hideLoading = () => setLoadingDisplay('hide');\n\n    const [errorProps, setErrorProps] = useState(FormErrorProps);\n\n    const showError = message => setErrorProps({ message, display: '' });\n    const hideError = () => setErrorProps({ message: '', display: 'hide' });\n\n    const [resultProps, setResultProps] = useState(ResultProps);\n\n    let canSubmit = true;\n\n    const submitListener = ev => {\n        ev.preventDefault();\n\n        // previne o duplo clique de submit\n        if (canSubmit) {\n            canSubmit = false;\n\n            let message;\n            if ((message = validateFields(initialTime, finalTime)) !== '') {\n                showError(message);\n                canSubmit = true;\n                return;\n            }\n\n            hideError();\n            showLoading();\n\n            network\n                .get(\n                    `/periods?initialTime=${initialTime}&finalTime=${finalTime}`\n                )\n                .then(({ data }) => setResultProps({ ...data }))\n                .catch(error => {\n                    let message = 'unknow';\n                    if (error.response && error.response.data) {\n                        message = error.response.data;\n                    }\n                    showError(message);\n                })\n                .then(() => {\n                    canSubmit = true;\n                    hideLoading();\n                });\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={submitListener}>\n                <FormError {...errorProps} />\n\n                <div className=\"row\">\n                    {createTimePicker({\n                        id: 'initial-time',\n                        label: 'Entrada',\n                        onChange: setInitialTime,\n                        time: initialTime,\n                    })}\n                    {createTimePicker({\n                        id: 'final-time',\n                        label: 'Saída',\n                        onChange: setFinalTime,\n                        time: finalTime,\n                    })}\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col s8\">\n                        <button\n                            className=\"btn waves-effect blue lighten-1 black-text btn-large\"\n                            type=\"submit\"\n                        >\n                            Calcular\n                        </button>\n                    </div>\n                    <div\n                        className={`col s4 valign-wrapper calculator-loading ${loadingDisplay}`}\n                    >\n                        <Preloader size=\"small\" />\n                    </div>\n                </div>\n            </form>\n            <Result {...resultProps} />\n        </>\n    );\n}\n\nfunction createTimePicker(props) {\n    return (\n        <div className=\"col s12 m6\">\n            <TimePicker {...props} />\n        </div>\n    );\n}\n","import { checkTime } from '../../utilities/time';\n\nexport function validateFields(initialTime, finalTime) {\n    if (initialTime == finalTime) return 'time.interval';\n    if (!checkTime(initialTime)) return 'initialTime.invalid';\n    if (!checkTime(finalTime)) return 'finalTime.invalid';\n    return '';\n}\n","import Calculator from './components/Calculator';\nimport './App.css';\n\nfunction App() {\n    return (\n        <div className=\"grey lighten-3 page-wrapper\">\n            <header className=\"center-align blue lighten-1\">\n                <h3>\n                    Calculadora de horas\n                    <i className=\"material-icons calculator-icon\">schedule</i>\n                </h3>\n            </header>\n            <div className=\"container calculator-wrapper\">\n                <div className=\"card\">\n                    <div className=\"card-title blue lighten-1\">\n                        Informe as horas de entrada e saída e veja seu tempo de\n                        trabalho no período diurno e noturno.\n                    </div>\n                    <div className=\"card-content\">\n                        <Calculator />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}